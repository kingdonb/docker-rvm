##
# Example child image which configures Ruby versions to be installed.
#
# Usage:
#
#     # Use the RVM_RUBY_VERSIONS and RVM_RUBY_DEFAULT specified below...
#     docker build -t example:multi - < examples/Dockerfile.multi
#
#     # Or, override RVM_RUBY_VERSIONS and/or RVM_RUBY_DEFAULT from command line
#     docker build -t example:multi \
#            --build-arg RVM_RUBY_VERSIONS="2.5.8 2.6.6 2.7.2 3.0.0-preview2 ruby-head" \
#            --build-arg RVM_RUBY_DEFAULT=2.7.2 \
#            - < examples/Dockerfile.multi
#
#     # Run a bash login shell
#     docker run -it example:multi bash -l
#
#     # Inside the container, we see the expected Ruby versions were installed
#     rvm@a8dcd6ad097b:/$ rvm list strings
#     ruby-head
#     ruby-3.0.0-preview2
#     ruby-2.7.2
#     ruby-2.6.6
#     ruby-2.5.8
#
#     # For easily using this example child image to iterate on parent image...
#     docker build -t msati/docker-rvm . \
#       && docker build -t example:multi - < examples/Dockerfile.multi \
#       && docker run -it example:multi bash -l
##

# Configuration for the ONBUILD steps of docker-rvm image
# NOTE (2020-12-15): master needed for 3.0.0-preview2
ARG RVM_VERSION=master
ARG RVM_RUBY_VERSIONS="2.5.8 2.6.6 2.7.2 ruby-3.0.0-preview2"
ARG RVM_RUBY_DEFAULT="2.7.2"
FROM msati/docker-rvm

# After Ruby versions are installed we continue as non-root rvm user
USER ${RVM_USER}
